#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Validate commit message format
echo "üìù Validating commit message..."

# Read the commit message
commit_message=$(cat $1)

# Check for conventional commit format
if ! echo "$commit_message" | grep -qE '^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .+'; then
  echo "‚ùå Invalid commit message format!"
  echo ""
  echo "Commit messages must follow conventional commit format:"
  echo "  <type>[optional scope]: <description>"
  echo ""
  echo "Types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
  echo ""
  echo "Examples:"
  echo "  feat: add new template engine"
  echo "  fix(core): resolve memory leak in optimization"
  echo "  docs: update API documentation"
  echo "  style: format code with prettier"
  echo ""
  echo "Your message: $commit_message"
  exit 1
fi

# Check message length
first_line=$(echo "$commit_message" | head -n1)
if [ ${#first_line} -gt 72 ]; then
  echo "‚ö†Ô∏è  Warning: Commit message first line is longer than 72 characters (${#first_line})"
  echo "Consider shortening: $first_line"
fi

# Check for proper capitalization
if echo "$first_line" | grep -qE '^[a-z]+\([^)]*\): [A-Z]'; then
  echo "‚ö†Ô∏è  Warning: Consider using lowercase for the description after the colon"
fi

echo "‚úÖ Commit message format validated!"
