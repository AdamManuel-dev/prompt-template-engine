name: CI Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'web-portal/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'web-portal/**'
  workflow_dispatch:

# Allow only one concurrent deployment per branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: ./web-portal

jobs:
  # Install dependencies and cache them
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    outputs:
      node-cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: './web-portal/package-lock.json'
          
      - name: Generate cache key
        id: cache-key
        run: echo "key=node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
        
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            node-modules-${{ runner.os }}-
            
      - name: Install root dependencies
        run: npm ci
        
      - name: Install workspace dependencies
        run: |
          cd frontend && npm ci
          cd ../backend && npm ci
          cd ../shared && npm ci

  # Build shared package
  build-shared:
    name: Build Shared Package
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ needs.setup.outputs.node-cache-key }}
          fail-on-cache-miss: true
          
      - name: Build shared package
        run: |
          cd shared
          npm run build
          
      - name: Cache shared build
        uses: actions/cache@v4
        with:
          path: ./web-portal/shared/dist
          key: shared-build-${{ github.sha }}

  # Lint and type checking
  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    needs: [setup, build-shared]
    strategy:
      matrix:
        workspace: [frontend, backend, shared]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ needs.setup.outputs.node-cache-key }}
          fail-on-cache-miss: true
          
      - name: Restore shared build cache
        uses: actions/cache@v4
        with:
          path: ./web-portal/shared/dist
          key: shared-build-${{ github.sha }}
          fail-on-cache-miss: true
          
      - name: Run linting
        run: |
          cd ${{ matrix.workspace }}
          npm run lint
          
      - name: Run type checking
        run: |
          cd ${{ matrix.workspace }}
          npm run typecheck

  # Unit tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [setup, build-shared]
    strategy:
      matrix:
        workspace: [frontend, backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ needs.setup.outputs.node-cache-key }}
          fail-on-cache-miss: true
          
      - name: Restore shared build cache
        uses: actions/cache@v4
        with:
          path: ./web-portal/shared/dist
          key: shared-build-${{ github.sha }}
          fail-on-cache-miss: true
          
      - name: Run unit tests
        run: |
          cd ${{ matrix.workspace }}
          npm run test -- --coverage --watchAll=false
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.workspace == 'backend'
        with:
          file: ./web-portal/${{ matrix.workspace }}/coverage/lcov.info
          flags: ${{ matrix.workspace }}

  # Build applications
  build:
    name: Build Applications
    runs-on: ubuntu-latest
    needs: [setup, build-shared]
    strategy:
      matrix:
        workspace: [frontend, backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ needs.setup.outputs.node-cache-key }}
          fail-on-cache-miss: true
          
      - name: Restore shared build cache
        uses: actions/cache@v4
        with:
          path: ./web-portal/shared/dist
          key: shared-build-${{ github.sha }}
          fail-on-cache-miss: true
          
      - name: Build application
        run: |
          cd ${{ matrix.workspace }}
          npm run build
          
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: ./web-portal/${{ matrix.workspace }}/dist
          key: ${{ matrix.workspace }}-build-${{ github.sha }}

  # E2E Tests
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [setup, build-shared, quality-checks, unit-tests, build]
    services:
      # Test database
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: cursor_prompt_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    env:
      # Database configuration for tests
      DATABASE_URL: postgresql://test:test@localhost:5432/cursor_prompt_test
      TEST_DATABASE_URL: postgresql://test:test@localhost:5432/cursor_prompt_test
      NODE_ENV: test
      JWT_SECRET: test-secret-key-for-ci
      ENCRYPTION_KEY: test-encryption-key-32-characters
      CLI_PATH: /__w/cursor-prompt-template-engine/cursor-prompt-template-engine/dist/cli.js
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Need full repo for CLI access
          path: .
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ needs.setup.outputs.node-cache-key }}
          fail-on-cache-miss: true
          
      - name: Restore shared build cache
        uses: actions/cache@v4
        with:
          path: ./web-portal/shared/dist
          key: shared-build-${{ github.sha }}
          fail-on-cache-miss: true
          
      - name: Restore build caches
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/frontend/dist
            ./web-portal/backend/dist
          key: frontend-build-${{ github.sha }}
          
      - name: Build CLI (required for E2E tests)
        run: |
          npm ci
          npm run build
          
      - name: Setup database
        working-directory: ./web-portal/backend
        run: |
          # Wait for postgres to be ready
          npx wait-on tcp:localhost:5432
          # Run database migrations
          npx prisma generate
          npx prisma db push --force-reset
          
      - name: Install Playwright
        working-directory: ./web-portal
        run: npx playwright install --with-deps chromium firefox webkit
        
      - name: Start application servers
        working-directory: ./web-portal
        run: |
          # Start backend in background
          cd backend && npm start &
          # Start frontend in background
          cd frontend && npm run preview &
          # Wait for servers to be ready
          npx wait-on http://localhost:3001/api/health http://localhost:4173
        env:
          PORT: 3001
          VITE_API_URL: http://localhost:3001
          
      - name: Run E2E tests
        working-directory: ./web-portal
        run: |
          # Update Playwright config for CI
          npx playwright test --reporter=html,github-actions
        env:
          # Use production build for E2E tests
          BASE_URL: http://localhost:4173
          
      - name: Upload E2E test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-test-results
          path: |
            ./web-portal/playwright-report/
            ./web-portal/test-results/
          retention-days: 7

  # Security scanning
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    needs: setup
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ needs.setup.outputs.node-cache-key }}
          fail-on-cache-miss: true
          
      - name: Run npm audit
        run: |
          npm audit --audit-level high
          cd frontend && npm audit --audit-level high
          cd ../backend && npm audit --audit-level high
          cd ../shared && npm audit --audit-level high
          
      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          languages: javascript
          source-root: ./web-portal

  # Performance testing (optional, for main branch)
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [build, e2e-tests]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/node_modules
            ./web-portal/frontend/node_modules
            ./web-portal/backend/node_modules
            ./web-portal/shared/node_modules
          key: ${{ needs.setup.outputs.node-cache-key }}
          fail-on-cache-miss: true
          
      - name: Restore build caches
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/frontend/dist
            ./web-portal/backend/dist
          key: frontend-build-${{ github.sha }}
          
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          cd frontend
          npm run preview &
          npx wait-on http://localhost:4173
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  # Deployment (conditional)
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests, build, e2e-tests]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          
      - name: Restore build caches
        uses: actions/cache@v4
        with:
          path: |
            ./web-portal/frontend/dist
            ./web-portal/backend/dist
            ./web-portal/shared/dist
          key: frontend-build-${{ github.sha }}
          
      - name: Deploy to staging
        run: |
          echo "🚀 Deploying to staging environment..."
          # Add your deployment logic here
          # Example: AWS, Vercel, Railway, etc.
          
      - name: Run deployment health check
        run: |
          echo "🔍 Running health check on staging deployment..."
          # Add health check for deployed application

  # Notification
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [quality-checks, unit-tests, build, e2e-tests]
    if: always()
    steps:
      - name: Report Status
        run: |
          if [[ "${{ needs.quality-checks.result }}" == "success" && "${{ needs.unit-tests.result }}" == "success" && "${{ needs.build.result }}" == "success" && "${{ needs.e2e-tests.result }}" == "success" ]]; then
            echo "✅ All CI checks passed successfully!"
          else
            echo "❌ Some CI checks failed:"
            echo "Quality checks: ${{ needs.quality-checks.result }}"
            echo "Unit tests: ${{ needs.unit-tests.result }}"
            echo "Build: ${{ needs.build.result }}"
            echo "E2E tests: ${{ needs.e2e-tests.result }}"
            exit 1
          fi